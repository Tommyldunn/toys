filetype off
set nofoldenable

set path+=**
set wildmenu

call plug#begin('~/.vim/plugged')

Plug 'ctrlpvim/ctrlp.vim'
Plug 'tpope/vim-surround'
Plug 'plasticboy/vim-markdown'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-fugitive'
Plug 'itchyny/lightline.vim'
Plug 'roman/golden-ratio'
Plug 'scrooloose/syntastic'
Plug 'rust-lang/rust.vim'
Plug 'racer-rust/vim-racer'
Plug 'kchmck/vim-coffee-script'
Plug 'neomake/neomake'
Plug 'scrooloose/nerdcommenter'
Plug 'MattesGroeger/vim-bookmarks'
Plug 'airblade/vim-gitgutter'
Plug 'godlygeek/tabular'
Plug 'junegunn/goyo.vim'
Plug 'junegunn/limelight.vim'
Plug 'dhruvasagar/vim-table-mode'
Plug 'gregsexton/gitv'
Plug 'dbext.vim'
Plug 'lifepillar/pgsql.vim'
Plug 'terryma/vim-multiple-cursors'
Plug 'vim-ruby/vim-ruby'
Plug 'tpope/vim-rails'
Plug 'tpope/vim-bundler'
Plug 'thoughtbot/vim-rspec'
Plug 'webdevel/tabulous'
Plug 'ap/vim-css-color'
Plug 'ntpeters/vim-better-whitespace'
Plug 'thinca/vim-quickrun'
Plug 'terryma/vim-expand-region'
Plug 'haya14busa/incsearch.vim'
Plug 'honza/vim-snippets'
Plug 'marcweber/vim-addon-mw-utils'
Plug 'tomtom/tlib_vim'
Plug 'davidoc/taskpaper.vim'
Plug 'chrisbra/NrrwRgn'
Plug 'ahw/vim-pbcopy'
Plug 'panozzaj/vim-autocorrect'
Plug 'reedes/vim-wordy'
Plug 'reedes/vim-wheel'
Plug 'garbas/vim-snipmate'
Plug 'jceb/vim-orgmode'
Plug 'tpope/vim-speeddating'
Plug 'vimwiki/vimwiki'
Plug 'tbabej/taskwiki'
Plug 'powerman/vim-plugin-AnsiEsc'
Plug 'majutsushi/tagbar'
Plug 'farseer90718/vim-taskwarrior'
Plug 'mhinz/vim-startify'

call plug#end()

au BufNewFile,BufRead *.note set filetype=outlaw

let g:vimwiki_list = [{'path': '~/.notes/', 'path_html': '~/.notes/html/'}]

set hidden
set incsearch
set hlsearch
let g:racer_cmd = "/Users/kamil/.cargo/bin/racer"

set completeopt=menuone,menu,longest
set wildignore+=*\\tmp\\*,*.swp,*.swo,*.zip,.git,.cabal-sandbox
set wildmode=longest,list,full
set wildmenu
set completeopt+=longest

set statusline+=%#warningmsg#
set statusline+=%*

" Netrw
let g:netrw_liststyle = 3
let g:netrw_banner = 0
let g:netrw_browse_split = 4

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

set ofu=syntaxcomplete#Complete

function! DistractionFreeWriting()
  GoldenRatioToggle
  Goyo
  " set linebreak
endfunction
command DistractionFree call DistractionFreeWriting()

let g:limelight_conceal_ctermfg = 'DarkGray'

filetype plugin indent on
set number
set nu ts=2 sw=2 et shiftround ignorecase smartcase
syntax enable
set background=dark

highlight LineNr ctermfg=grey
highlight LineNr ctermbg=black

:set backspace=indent,eol,start

let g:lightline = {
      \ 'colorscheme': 'powerline',
      \ 'component': {
      \   'readonly': '%{&readonly?"x":""}',
      \ },
      \ 'separator': { 'left': '', 'right': '' },
      \ 'subseparator': { 'left': '|', 'right': '|' }
      \ }

let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 'ra'
set wildignore+=*/tmp/*,*.so,*.swp,*.zip
let g:ctrlp_custom_ignore = '\v[\/]\.(git|hg|svn)$'

if !has('gui_running')
    set t_Co=256
endif

augroup NeomakeRust
  autocmd!
  autocmd! BufWritePost *.rs Neomake
augroup END

function! NumberToggle()
  if(&relativenumber == 1)
    set norelativenumber
  else
    set relativenumber
  endif
endfunc

let g:org_agenda_files = ['~/.notes/*.org']

let mapleader = "\<Space>"
nnoremap <Leader>o :CtrlPMixed<CR>
nnoremap <Leader>w :w<CR>
nnoremap <Leader>- :sp<CR>
nnoremap <Leader>\ :vsp<CR>
nnoremap <Leader>k <C-w><Up><CR>
nnoremap <Leader>j <C-w><Down><CR>
nnoremap <Leader>l <C-w><Right><CR>
nnoremap <Leader>h <C-w><Left><CR>
nnoremap <Leader>b :b #<CR>
nnoremap <Leader>f :NERDTreeFind<CR>
nnoremap <Leader>t :tabnew<CR>
nnoremap <Leader>q :q<CR>
nnoremap <Leader>Q :q!<CR>
nmap <Leader><Leader> V
vmap v <Plug>(expand_region_expand)
vmap <C-v> <Plug>(expand_region_shrink)
inoremap jj <Esc>
nnoremap ff :noh <CR>
nnoremap \\ :Limelight!! <CR>
nnoremap <Leader>n :call NumberToggle()<cr>

autocmd FileType markdown nnoremap <Leader>x :,,s/\[ \]/[x]/g<cr>:noh<cr>f[l

nnoremap <A-j> :m .+1<CR>==
nnoremap <A-k> :m .-2<CR>==
inoremap <A-j> <Esc>:m .+1<CR>==gi
inoremap <A-k> <Esc>:m .-2<CR>==gi
vnoremap <A-j> :m '>+1<CR>gv=gv
vnoremap <A-k> :m '<-2<CR>gv=gv

map /  <Plug>(incsearch-forward)
map ?  <Plug>(incsearch-backward)
map g/ <Plug>(incsearch-stay)

hi Normal                    ctermfg=254 ctermbg=234
hi LineNr                    ctermfg=242 ctermbg=233
hi VertSplit                 ctermfg=233 ctermbg=233 cterm=NONE
hi Folded ctermfg=248 ctermbg=236
